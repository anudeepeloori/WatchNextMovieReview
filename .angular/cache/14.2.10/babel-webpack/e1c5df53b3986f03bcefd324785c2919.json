{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let DataService = /*#__PURE__*/(() => {\n  class DataService {\n    constructor(hc) {\n      this.hc = hc;\n      this.userLoginStatus = false;\n\n      if (localStorage.getItem('username') !== null) {\n        this.userLoginStatus = true;\n      }\n    }\n\n    getMoviesData() {\n      return this.hc.get(\"http://localhost:3000/items\");\n    }\n\n    getMoviesDataById(id) {\n      return this.hc.get('http://localhost:3000/items/' + id);\n    }\n\n    getTopMoviesData() {\n      return this.hc.get(\"http://localhost:3000/topitems\");\n    }\n\n    createNewMovie(movieObj) {\n      return this.hc.post(\"http://localhost:3000/item\", movieObj);\n    }\n\n    createUser(userObj) {\n      return this.hc.post(\"/user/createuser\", userObj);\n    }\n\n    loginUser(credentials) {\n      if (credentials.type === \"admin\") {\n        return this.hc.post(\"/admin/login\", credentials);\n      }\n\n      if (credentials.type === \"user\") {\n        return this.hc.post(\"/user/login\", credentials);\n      }\n    }\n\n    rating(value) {\n      return this.hc.post(\"/user/movierating\", value);\n    }\n\n    getratings() {\n      return this.hc.get(\"/user/ratings\");\n    } // Submit or update rating\n\n\n    submitReview(reviewData) {\n      return this.hc.post(\"http://localhost:3000/user/movierating\", reviewData);\n    } // Fetch user’s existing rating for a movie\n\n\n    getraating(userId, movieId) {\n      return this.hc.get(`http://localhost:3000/user/movierating/${userId}/${movieId}`);\n    }\n\n    contactus(value) {\n      return this.hc.post(\"/user/contactform\", value);\n    }\n\n  }\n\n  DataService.ɵfac = function DataService_Factory(t) {\n    return new (t || DataService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  DataService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: DataService,\n    factory: DataService.ɵfac,\n    providedIn: 'root'\n  });\n  return DataService;\n})();","map":null,"metadata":{},"sourceType":"module"}